#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

START_TIME=$SECONDS

# set -x
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

# set defaults for optional config vars
: ${SFDX_BUILDPACK_DEBUG:="false"}

source $BP_DIR/lib/common.sh
source $BP_DIR/lib/stdlib.sh

### Setup functions

# modify_git_config() {
#   git config --global url."https://api@github.com/".insteadOf "https://github.com/"
#   git config --global url."https://ssh@github.com/".insteadOf "ssh://git@github.com/"
#   git config --global url."https://git@github.com/".insteadOf "git@github.com:"
# }

setup_creds() {  
  log "Access token from envdir is is $(cat $ENV_DIR/GITHUB_PAT)"
  mkdir -p $BUILD_DIR/.profile.d
  cp "$BP_DIR"/profile/* "$BUILD_DIR/.profile.d/"
  export "GITHUB_PAT=$(cat $ENV_DIR/GITHUB_PAT)"
  export PAT_BUILDBACK_TEST=true
  echo 'echo $GITHUB_PAT' > $BUILD_DIR/.git-askpass
  chmod +x $BUILD_DIR/.git-askpass
}

header 'Welcome to github-via-pat 8.28.2020 2:35'
log "Setting up github private repo access via personal access token"

log "Setting up paths ..."

debug "BUILD_DIR: $BUILD_DIR"
debug "CACHE_DIR: $CACHE_DIR"
debug "ENV_DIR: $ENV_DIR"
debug "BP_DIR: $BP_DIR"

# log "Modifying git config"
# modify_git_config
log "exporting credentials in environment"
setup_creds

header "DONE! Completed in $(($SECONDS - $START_TIME))s"
exit 0